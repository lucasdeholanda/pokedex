{"version":3,"sources":["components/common/Loading.jsx","components/common/NavBar.jsx","components/EvolutionChain.jsx","components/moves/MoveItem.jsx","components/moves/MoveList.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Loading","className","icon","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","NavBar","onSubmit","onSearchChange","classes","AppBar","Toolbar","IconButton","edge","aria-label","Menu","Typography","variant","noWrap","Search","InputBase","onChange","placeholder","input","inputProps","P","Pokedex","EvolutionChain","species","onClick","useState","evolutionChain","setEvolutionChain","useEffect","a","resource","evolution_chain","url","getEvolutionConditions","evolution","console","log","conditions","i","evolution_details","details","trigger","name","triggers","min_level","min_happiness","known_move_type","_","startCase","min_affection","time_of_day","location","min_beauty","relative_physical_stats","item","held_item","push","uniq","join","Paper","renderEvolutionTree","chain","evolves_to","length","map","key","dangerouslySetInnerHTML","__html","style","alignSelf","MoveItem","pokemonMove","move","setMove","getMoveByName","TableRow","colSpan","learn","version_group_detail","move_learn_method","level_learned_at","id","type","damage_class","power","accuracy","pp","MoveList","moves","sort","m1","m2","sortedMoves","orderBy","TableContainer","component","Table","size","stickyHeader","TableHead","TableCell","TableBody","App","searchValue","setSearchValue","pokemonName","setPokemonName","pokemon","setPokemon","version","setMoves","setSpecies","getPokemonByName","versionMoves","version_group_details","find","vgd","version_group","moveSimple","event","preventDefault","target","value","Container","maxWidth","elevation","src","sprites","front_default","alt","types","pokemonType","stats","slice","pokemonStat","stat","base_stat","Boolean","window","hostname","match","library","add","faArrowRight","faSpinner","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ce89eaee.chunk.js","sourcesContent":["import { FontAwesomeIcon as FA } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\n\r\n\r\nimport \"./loading.css\";\r\n\r\nconst Loading = () => {\r\n\treturn (\r\n\t\t<div className=\"loading\">\r\n\t\t\t<FA icon={\"spinner\"} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Loading;","import { AppBar, fade, IconButton, InputBase } from \"@material-ui/core\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Menu as MenuIcon, Search as SearchIcon } from \"@material-ui/icons\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useLinkedState } from \"../hooks\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tflexGrow: 1\r\n\t},\r\n\tmenuButton: {\r\n\t\tmarginRight: theme.spacing(2)\r\n\t},\r\n\ttitle: {\r\n\t\tflexGrow: 1,\r\n\t\tdisplay: \"none\",\r\n\t\t[theme.breakpoints.up(\"sm\")]: {\r\n\t\t\tdisplay: \"block\"\r\n\t\t}\r\n\t},\r\n\tsearch: {\r\n\t\tposition: \"relative\",\r\n\t\tborderRadius: theme.shape.borderRadius,\r\n\t\tbackgroundColor: fade(theme.palette.common.white, 0.15),\r\n\t\t\"&:hover\": {\r\n\t\t\tbackgroundColor: fade(theme.palette.common.white, 0.25)\r\n\t\t},\r\n\t\tmarginLeft: 0,\r\n\t\twidth: \"100%\",\r\n\t\t[theme.breakpoints.up(\"sm\")]: {\r\n\t\t\tmarginLeft: theme.spacing(1),\r\n\t\t\twidth: \"auto\"\r\n\t\t}\r\n\t},\r\n\tsearchIcon: {\r\n\t\tpadding: theme.spacing(0, 2),\r\n\t\theight: \"100%\",\r\n\t\tposition: \"absolute\",\r\n\t\tpointerEvents: \"none\",\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\"\r\n\t},\r\n\tinputRoot: {\r\n\t\tcolor: \"inherit\"\r\n\t},\r\n\tinputInput: {\r\n\t\tpadding: theme.spacing(1, 1, 1, 0),\r\n\t\t// vertical padding + font size from searchIcon\r\n\t\tpaddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n\t\ttransition: theme.transitions.create(\"width\"),\r\n\t\twidth: \"100%\",\r\n\t\t[theme.breakpoints.up(\"sm\")]: {\r\n\t\t\twidth: \"12ch\",\r\n\t\t\t\"&:focus\": {\r\n\t\t\t\twidth: \"20ch\"\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}));\r\n\r\nconst NavBar = ({ onSubmit, onSearchChange }) => {\r\n\tconst classes = useStyles();\r\n\r\n\t// const [search, changeSearch] = useLinkedState(\"\");\r\n\r\n\t// useEffect(() => {\r\n\t// \tconsole.log(search);\r\n\t// }, [search]);\r\n\r\n\treturn (\r\n\t\t<AppBar className=\"appbar\" position=\"static\">\r\n\t\t\t<Toolbar>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tedge=\"start\"\r\n\t\t\t\t\tclassName={classes.menuButton}\r\n\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\taria-label=\"open drawer\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<Typography className={classes.title} variant=\"h6\" noWrap>\r\n\t\t\t\t\tPokédex\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<form className={classes.search} onSubmit={onSubmit}>\r\n\t\t\t\t\t<div className={classes.searchIcon}>\r\n\t\t\t\t\t\t<SearchIcon />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<InputBase\r\n\t\t\t\t\t\tonChange={onSearchChange}\r\n\t\t\t\t\t\tplaceholder=\"Search…\"\r\n\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\troot: classes.inputRoot,\r\n\t\t\t\t\t\t\tinput: classes.inputInput\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tinputProps={{ \"aria-label\": \"search\" }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</form>\r\n\t\t\t</Toolbar>\r\n\t\t</AppBar>\r\n\t);\r\n};\r\n\r\nexport default NavBar;\r\n","import { FontAwesomeIcon as FA } from \"@fortawesome/react-fontawesome\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport _ from \"lodash\";\r\nimport { Pokedex } from \"pokeapi-js-wrapper\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Loading from \"./common/Loading.jsx\";\r\n\r\n\r\nconst P = new Pokedex();\r\n\r\nconst EvolutionChain = ({ species, onClick }) => {\r\n\tconst [evolutionChain, setEvolutionChain] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!species) return;\r\n\r\n\t\t(async () => {\r\n\t\t\tconst evolutionChain = await P.resource(species?.evolution_chain.url);\r\n\t\t\tsetEvolutionChain(evolutionChain);\r\n\t\t})();\r\n\t}, [species]);\r\n\r\n\tconst getEvolutionConditions = (evolution) => {\r\n\t\tconsole.log(evolution);\r\n\t\tconst conditions = [];\r\n\r\n\t\tlet i = 0;\r\n\t\tfor (const details of evolution.evolution_details) {\r\n\t\t\tconst trigger = details.trigger.name;\r\n\r\n\t\t\tlet triggers = \"\";\r\n\t\t\tif (trigger === \"level-up\") {\r\n\t\t\t\tif (details.min_level) triggers += `Level ${details.min_level}\\n`;\r\n\t\t\t\tif (details.min_happiness) triggers += \" Hapiness\\n\";\r\n\t\t\t\tif (details.known_move_type) triggers += `Know ${_.startCase(details.known_move_type.name)}-type move\\n`;\r\n\t\t\t\tif (details.min_affection) triggers += `Affection: ${details.min_affection}+\\n`;\r\n\t\t\t\tif (details.time_of_day) triggers += `During the ${details.time_of_day}\\n`;\r\n\t\t\t\tif (details.location) triggers += `Level up in ${_.startCase(details.location.name)}\\n`;\r\n\t\t\t\tif (details.min_beauty) triggers += `Beauty\\n`;\r\n\t\t\t\tif (details.relative_physical_stats !== null) {\r\n\t\t\t\t\tconst relativePhysicalMapping = {\r\n\t\t\t\t\t\t\"-1\": \"<\",\r\n\t\t\t\t\t\t\"0\": \"=\",\r\n\t\t\t\t\t\t\"1\": \">\"\r\n\t\t\t\t\t};\r\n\t\t\t\t\ttriggers += `Atk ${relativePhysicalMapping[details.relative_physical_stats]} Def`;\r\n\t\t\t\t}\r\n\t\t\t} else if (trigger === \"use-item\") {\r\n\t\t\t\ttriggers = _.startCase(details.item.name);\r\n\t\t\t} else if (trigger === \"trade\") {\r\n\t\t\t\ttriggers = \"Trade\\n\";\r\n\t\t\t\tif (details.held_item) triggers += `Holding ${_.startCase(details.held_item.name)}\\n`;\r\n\t\t\t} else if (trigger === \"shed\") {\r\n\t\t\t\ttriggers = `Evolve with a pokéball in the bag and space in the party`;\r\n\t\t\t}\r\n\t\t\tconditions.push(triggers || `Evolution${i++}`);\r\n\t\t}\r\n\r\n\t\treturn _.uniq(conditions).join(\"<hr />\");\r\n\t};\r\n\r\n\tconst renderEvolutionTree = chain =>\r\n\t\t<div className=\"evo\">\r\n\t\t\t<Paper className=\"evo__main\" onClick={() => onClick(chain.species.name)}>{chain.species.name}</Paper>\r\n\t\t\t{chain.evolves_to.length > 0 &&\r\n\t\t\t<div className=\"evo__evos\">\r\n\t\t\t\t{chain.evolves_to.map(evolution =>\r\n\t\t\t\t\t<div className=\"evos__evo\" key={evolution.species.name}>\r\n\t\t\t\t\t\t<div className=\"evo__condition\">\r\n\t\t\t\t\t\t\t<pre className=\"evo__requirement\" dangerouslySetInnerHTML={{ __html: getEvolutionConditions(evolution) }} />\r\n\t\t\t\t\t\t\t<FA icon=\"arrow-right\" style={{ alignSelf: \"center\" }} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{renderEvolutionTree(evolution)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>}\r\n\t\t</div>;\r\n\r\n\treturn (\r\n\t\t<Paper className=\"evolution\">\r\n\t\t\t<div className=\"evolution__content\">\r\n\t\t\t\t{evolutionChain ? renderEvolutionTree(evolutionChain.chain) : <Loading />}\r\n\t\t\t</div>\r\n\t\t</Paper>\r\n\t);\r\n};\r\n\r\nexport default EvolutionChain;","import TableCell from \"@material-ui/core/TableCell/TableCell.js\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport _ from \"lodash\";\r\nimport { Pokedex } from \"pokeapi-js-wrapper\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst P = new Pokedex();\r\n\r\nconst MoveItem = ({pokemonMove}) => {\r\n\tconst [move, setMove] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\t(async () => {\r\n\t\t\tsetMove(await P.getMoveByName(pokemonMove.move.name))\r\n\t\t})();\r\n\t}, [pokemonMove.move.name]);\r\n\r\n\tif (!move) return <TableRow><TableCell colSpan={7}>Loading Move...</TableCell></TableRow>;\r\n\r\n\tconst moveLearnMethod = pokemonMove.version_group_detail.move_learn_method.name;\r\n\tlet learn = \"\";\r\n\r\n\tswitch (moveLearnMethod) {\r\n\t\tcase \"level-up\":\r\n\t\t\tlearn = `Level ${pokemonMove.version_group_detail.level_learned_at}`;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tlearn = _.startCase(pokemonMove.version_group_detail.move_learn_method.name);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<TableRow key={move.id}>\r\n\t\t\t<TableCell>{learn}</TableCell>\r\n\t\t\t<TableCell>{_.startCase(move.name)}</TableCell>\r\n\t\t\t<TableCell>{move.type.name}</TableCell>\r\n\t\t\t<TableCell>{move.damage_class.name}</TableCell>\r\n\t\t\t<TableCell>{move.power}</TableCell>\r\n\t\t\t<TableCell>{move.accuracy}</TableCell>\r\n\t\t\t<TableCell>{move.pp}</TableCell>\r\n\t\t</TableRow>\r\n\t);\r\n};\r\n\r\nexport default MoveItem;","import { Paper, TableContainer } from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport _ from \"lodash\";\r\nimport React from \"react\";\r\nimport Loading from \"../common/Loading.jsx\";\r\nimport MoveItem from \"./MoveItem.jsx\";\r\n\r\n\r\nconst MoveList = ({ moves }) => {\r\n\tif (!moves) return <Loading />;\r\n\r\n\tmoves.sort((m1, m2) => m1.version_group_detail.level_learned_at - m2.version_group_detail.level_learned_at);\r\n\tconst sortedMoves = _.orderBy(moves, [\"version_group_detail.move_learn_method.name\", \"version_group_detail.level_learned_at\", [\"desc\", \"asc\"]]);\r\n\r\n\treturn (\r\n\t\t<TableContainer className=\"movelist\" component={Paper}>\r\n\t\t\t<Table size=\"small\" stickyHeader>\r\n\t\t\t\t<TableHead>\r\n\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t<TableCell>Level</TableCell>\r\n\t\t\t\t\t\t<TableCell>Name</TableCell>\r\n\t\t\t\t\t\t<TableCell>Type</TableCell>\r\n\t\t\t\t\t\t<TableCell>Category</TableCell>\r\n\t\t\t\t\t\t<TableCell>Power</TableCell>\r\n\t\t\t\t\t\t<TableCell>Accuracy</TableCell>\r\n\t\t\t\t\t\t<TableCell>PP</TableCell>\r\n\t\t\t\t\t</TableRow>\r\n\t\t\t\t</TableHead>\r\n\t\t\t\t<TableBody>\r\n\t\t\t\t\t{sortedMoves.map(pokemonMove => (\r\n\t\t\t\t\t\t<MoveItem key={pokemonMove.version_group_detail.move_learn_method.name + pokemonMove.move.name} pokemonMove={pokemonMove} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</TableBody>\r\n\t\t\t</Table>\r\n\t\t</TableContainer>\r\n\t);\r\n};\r\n\r\nexport default MoveList;","import { Paper, Table, TableContainer } from \"@material-ui/core\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport _ from \"lodash\";\r\nimport { Pokedex } from \"pokeapi-js-wrapper\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Loading from \"./components/common/Loading.jsx\";\r\nimport NavBar from \"./components/common/NavBar.jsx\";\r\nimport EvolutionChain from \"./components/EvolutionChain.jsx\";\r\nimport MoveList from \"./components/moves/MoveList.jsx\";\r\n\r\n\r\nconst P = new Pokedex();\r\n\r\nconst App = () => {\r\n\tconst [searchValue, setSearchValue] = useState(\"\");\r\n\tconst [pokemonName, setPokemonName] = useState(\"\");\r\n\tconst [pokemon, setPokemon] = useState(null);\r\n\tconst [version, setVersion] = useState(\"platinum\");\r\n\tconst [moves, setMoves] = useState([]);\r\n\tconst [species, setSpecies] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\t(async () => {\r\n\t\t\tconst pokemon = await P.getPokemonByName(pokemonName);\r\n\t\t\tsetPokemon(pokemon);\r\n\r\n\t\t\tconst species = await P.resource(pokemon.species.url);\r\n\t\t\tsetSpecies(species);\r\n\t\t})();\r\n\t}, [pokemonName]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!pokemon) return;\r\n\r\n\t\tconst versionMoves = [];\r\n\r\n\t\tfor (let move of pokemon.moves) {\r\n\t\t\tconst version_group_detail = move.version_group_details.find(vgd => vgd.version_group.name === version);\r\n\t\t\tif (!version_group_detail) continue;\r\n\r\n\t\t\tconst { version_group_details, ...moveSimple } = move;\r\n\r\n\t\t\tversionMoves.push({\r\n\t\t\t\t...moveSimple,\r\n\t\t\t\tversion_group_detail\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsetMoves(versionMoves);\r\n\t}, [pokemon, version]);\r\n\r\n\tif (!pokemonName) setPokemonName(\"pikachu\");\r\n\r\n\tif (!pokemon) return <Loading />;\r\n\r\n\tconst handlEvolutionChainClick = (name) => {\r\n\t\tsetPokemonName(name);\r\n\t};\r\n\r\n\tconst handleSearchSumit = event => {\r\n\t\tevent.preventDefault();\r\n\t\tsetPokemonName(searchValue);\r\n\t};\r\n\r\n\tconst handleSearchChange = event => {\r\n\t\tsetSearchValue(event.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"app\">\r\n\t\t\t<NavBar onSubmit={handleSearchSumit} onSearchChange={handleSearchChange} />\r\n\t\t\t<Container maxWidth=\"xl\">\r\n\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t<div className=\"menu-left-area\">\r\n\t\t\t\t\t\t<Paper className=\"menu-left\" elevation={7}>\r\n\t\t\t\t\t\t\t<h2>{_.startCase(pokemon.name)}</h2>\r\n\t\t\t\t\t\t\t<img src={pokemon.sprites.front_default} alt={pokemon.name} />\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t{pokemon.types.map(pokemonType => (\r\n\t\t\t\t\t\t\t\t\t<div key={pokemonType.type.name}>{pokemonType.type.name}</div>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<TableContainer className=\"stats\" component={Paper} elevation={1}>\r\n\t\t\t\t\t\t<Table size=\"small\">\r\n\t\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t\t{pokemon.stats.slice().map(pokemonStat => (\r\n\t\t\t\t\t\t\t\t\t<TableRow key={pokemonStat.stat.name}>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell variant=\"head\">{pokemonStat.stat.name === \"hp\" ? \"HP\" : _.startCase(pokemonStat.stat.name)}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell>{pokemonStat.base_stat}</TableCell>\r\n\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t</TableContainer>\r\n\t\t\t\t\t<EvolutionChain species={species} onClick={handlEvolutionChainClick} />\r\n\t\t\t\t\t<MoveList moves={moves} />\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faArrowRight, faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App.jsx\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nlibrary.add();\r\n\r\nlibrary.add(faArrowRight, faSpinner);\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}